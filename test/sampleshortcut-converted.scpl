Comment "Made by pfg\nhttps://routinehub.co/user/pfg\n/u/pfg___\npfg#4865\n\" quote ' quote"
GetDictionaryfromInput
SetVariable Input
Text "Icon List V2"
SetVariable ThisShortcut
CreateFolder Service="iCloud Drive" Path="/IconListV2"
CreateFolder Service="iCloud Drive" Path="/IconListV2/MyLists"
Dictionary {name: v:ThisShortcut, version: "0.1.0"} -> mv:CFUDictionary
GetFile Service="iCloud Drive" ShowDocumentPicker=false FilePath="AutoUpdateData.json" ErrorIfNotFound=false
SetDictionaryValue Key=2140 Value=mv:CFUDictionary
SaveFile Service="iCloud Drive" AskWheretoSave=false DestinationPath="AutoUpdateData.json" OverwriteIfFileExists=true
GetVariable v:Input.action
If Input=Equals Value=Escape
	GetVariable v:Input.text
	ReplaceText FindText="\\" ReplaceWith="\\\\" -> mv:"Replace Text"
	Text "\n" -> mv:Text
	GetVariable mv:"Replace Text"
	ReplaceText FindText=mv:Text ReplaceWith=" "
	ReplaceText FindText=";" ReplaceWith="\\;"
	ExitShortcut
Otherwise
End
If Input=Equals Value=CreateCard
	GetVariable v:Input.carddata
	SetVariable CardData
	GetVariable v:CardData.photo
	Count Characters
	If Input=Equals Value=1
		Text ""
	Otherwise
		Text "PHOTO;ENCODING=b:\(v:CardData.photo)"
	End -> mv:Photo
	GetVariable v:CardData.name
	Count Characters
	If Input=Equals Value=0
		Text "No Title"
	Otherwise
		GetVariable v:CardData.name
	End -> mv:Name
	Dictionary {action: Escape, text: mv:Name} -> mv:Dictionary
	GetVariable mv:Dictionary
	RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false -> mv:"Run Shortcut"
	Dictionary {action: Escape, text: v:CardData.description} -> mv:Dictionary1
	GetVariable mv:Dictionary1
	RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false -> mv:"Run Shortcut1"
	Dictionary {action: Escape, text: v:CardData.note} -> mv:Dictionary2
	GetVariable mv:Dictionary2
	RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false -> mv:"Run Shortcut2"
	GetVariable mv:Name
	Text "BEGIN:VCARD\nVERSION:3.0\nN;CHARSET=utf-8:\(mv:"Run Shortcut");;;\nORG;CHARSET=utf-8:\(mv:"Run Shortcut1")\nNOTE;CHARSET=utf-8:\(mv:"Run Shortcut2")\n\(mv:Photo)\nEND:VCARD" -> mv:Result
	GetVariable mv:Result
	ExitShortcut
Otherwise
End
If Input=Equals Value=AsContact
	GetVariable v:Input.vcard
	SetName Name="a.vcf" -> mv:vCard
	GetVariable mv:vCard{as: contact}
	ExitShortcut
Otherwise
End
If Input=Equals Value=ChoosePhoto
	SelectPhotos false -> mv:SelectedPhoto
	ResizeImage Width=123
	SetVariable Image
	GetVariable v:Image{as: image, get: height}
	If Input="Is Greater Than" Number=123
		GetVariable v:Image
		GetVariable
		SetVariable FilledImage
		GetVariable mv:SelectedPhoto
		ResizeImage Width=0 Height=123
		SetVariable Image
	Otherwise
		GetVariable mv:SelectedPhoto
		ResizeImage Width=0 Height=123
		SetVariable FilledImage
	End
	Text "R0lGODlhAQABAIABAAAAAP///yH5BAEAAAEALAAAAAABAAEAAAICTAEAOw=="
	Base64Encode Mode=Decode
	ResizeImage Width=123 Height=123 -> mv:TransparentImage
	GetVariable mv:TransparentImage
	OverlayImage Image=v:Image ShowImageEditor=false Position=Center
	SetVariable Image
	GetVariable mv:TransparentImage
	OverlayImage Image=v:Image ShowImageEditor=false Position=Center Width=87 Height=87
	SetVariable FitImage
	GetVariable mv:TransparentImage
	OverlayImage Image=v:FilledImage ShowImageEditor=false Position=Center
	SetVariable FilledImage
	GetVariable v:Image
	Base64Encode Mode=Encode LineBreaks=None
	SetVariable Image
	GetVariable v:FitImage
	Base64Encode Mode=Encode LineBreaks=None
	SetVariable FitImage
	GetVariable v:FilledImage
	Base64Encode Mode=Encode LineBreaks=None
	SetVariable FilledImage
	Text "BEGIN:VCARD\nVERSION:3.0\nPHOTO;ENCODING=b:\(v:FilledImage)\nNOTE;CHARSET=utf-8:filledImage\nN;CHARSET=utf-8:Fill Circle;;;\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nPHOTO;ENCODING=b:\(v:Image)\nNOTE;CHARSET=utf-8:standardImage\nN;CHARSET=utf-8:Original Size;;;\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nPHOTO;ENCODING=b:\(v:FitImage)\nNOTE;CHARSET=utf-8:fitImage\nN;CHARSET=utf-8:Fit in Circle;;;\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nNOTE;CHARSET=utf-8:noImage\nN;CHARSET=utf-8:No Image;;;\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nNOTE;CHARSET=utf-8:differentPhoto\nN;CHARSET=utf-8:Choose Different Photo;;;\nEND:VCARD"
	SetVariable vCard
	Dictionary {action: AsContact, vcard: vCard} -> mv:Dictionary3
	GetVariable mv:Dictionary3
	RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
	ChoosefromList -> mv:ChosenItem
	GetVariable mv:ChosenItem{as: contact, get: notes}
	If Input=Equals Value=filledImage
		GetVariable v:FilledImage
	Otherwise
	End
	If Input=Equals Value=standardImage
		GetVariable v:Image
	Otherwise
	End
	If Input=Equals Value=fitImage
		GetVariable v:FitImage
	Otherwise
	End
	If Input=Equals Value=noImage
		Text " "
	Otherwise
	End
	If Input=Equals Value=differentPhoto
		Dictionary {action: ChoosePhoto}
		RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
	Otherwise
	End
	ExitShortcut
Otherwise
End
If Input=Equals Value=EditItem
	GetVariable v:Input.carddata
	SetVariable CardData
	Nothing
	SetVariable ActionList -> mv:"Set Variable"
	Dictionary {action: CreateCard, carddata: v:CardData} -> mv:Dictionary4
	GetVariable mv:Dictionary4
	RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false -> mv:"Run Shortcut3"
	Dictionary {action: Escape, text: v:CardData.name} -> mv:Dictionary5
	GetVariable mv:Dictionary5
	RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false -> mv:"Run Shortcut4"
	Dictionary {action: Escape, text: v:CardData.description} -> mv:Dictionary6
	GetVariable mv:Dictionary6
	RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false -> mv:"Run Shortcut5"
	Dictionary {action: Escape, text: v:CardData.note} -> mv:Dictionary7
	GetVariable mv:Dictionary7
	RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false -> mv:"Run Shortcut6"
	GetVariable mv:"Set Variable"
	Text "\(mv:"Run Shortcut3")\nBEGIN:VCARD\nVERSION:3.0\nN;CHARSET=utf-8:—————;;;\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nNOTE;CHARSET=utf-8:setIcon\nN;CHARSET=utf-8:Icon;;;\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nNOTE;CHARSET=utf-8:setName\nN;CHARSET=utf-8:Title;;;\nORG;CHARSET=utf-8:\(mv:"Run Shortcut4")\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nNOTE;CHARSET=utf-8:setDescription\nN;CHARSET=utf-8:Description;;;\nORG;CHARSET=utf-8:\(mv:"Run Shortcut5")\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nNOTE;CHARSET=utf-8:setNote\nN;CHARSET=utf-8:Note (Hidden);;;\nORG;CHARSET=utf-8:\(mv:"Run Shortcut6")\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nN;CHARSET=utf-8:—————;;;\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nNOTE;CHARSET=utf-8:doneEditing\nN;CHARSET=utf-8:Save;;;\nEND:VCARD" -> mv:vCard1
	Dictionary {action: AsContact, vcard: mv:vCard1} -> mv:Dictionary8
	GetVariable mv:Dictionary8
	RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
	ChoosefromList -> mv:ChosenItem1
	GetVariable mv:ChosenItem1{as: contact, get: notes}
	If Input=Equals Value=setIcon
		GetVariable v:CardData -> mv:"Get Variable"
		Dictionary {action: ChoosePhoto} -> mv:Dictionary9
		GetVariable mv:Dictionary9
		RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false -> mv:"Run Shortcut7"
		GetVariable mv:"Get Variable"
		SetDictionaryValue Key=photo Value=mv:"Run Shortcut7"
		SetVariable CardData
		Nothing
	Otherwise
	End
	If Input=Equals Value=setName
		AskforInput Question="New Name" DefaultAnswer=v:CardData.name -> mv:NewValue
		GetVariable v:CardData
		SetDictionaryValue Key=name Value=mv:NewValue
		SetVariable CardData
		Nothing
	Otherwise
	End
	If Input=Equals Value=setDescription
		AskforInput Question="New Description" DefaultAnswer=v:CardData.description -> mv:NewValue1
		GetVariable v:CardData
		SetDictionaryValue Key=description Value=mv:NewValue1
		SetVariable CardData
		Nothing
	Otherwise
	End
	If Input=Equals Value=setNote
		AskforInput Question="New Note" DefaultAnswer=v:CardData.note -> mv:NewValue2
		GetVariable v:CardData
		SetDictionaryValue Key=note Value=mv:NewValue2
		SetVariable CardData
		Nothing
	Otherwise
	End
	If Input=Equals Value=doneEditing
		GetVariable v:CardData
		ExitShortcut
	Otherwise
	End
	Dictionary {action: EditItem, carddata: v:CardData} -> mv:Dictionary10
	GetVariable mv:Dictionary10
	RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
	ExitShortcut
Otherwise
End
If Input=Equals Value=RemoveItemAtIndex
	GetVariable v:Input.index
	SetVariable Index
	GetVariable v:Input.list
	SetVariable List
	Count Items
	SetVariable Length
	GetVariable v:Length
	If Input=Equals Value=1
		List []
		ExitShortcut
	Otherwise
	End
	GetVariable v:Index
	If Input=Equals Value=1
		GetVariable v:List
		GetItemfromList Get="Items in Range" GetItemsFromIndex=2 ToIndex=v:Length
		ExitShortcut
	Otherwise
	End
	GetVariable v:Index
	If Input=Equals Value=v:Length
		GetVariable v:List -> mv:"Get Variable1"
		GetVariable v:Length
		Calculate Operation="-" Operand=1 -> mv:Calculate
		GetVariable mv:"Get Variable1"
		GetItemfromList Get="Items in Range" GetItemsFromIndex=1 ToIndex=mv:Calculate
		ExitShortcut
	Otherwise
	End
	GetVariable v:List -> mv:"Get Variable2"
	GetVariable v:Index
	Calculate Operation="-" Operand=1 -> mv:Calculate1
	GetVariable mv:"Get Variable2"
	GetItemfromList Get="Items in Range" GetItemsFromIndex=1 ToIndex=mv:Calculate1
	SetVariable ResList
	GetVariable v:List -> mv:"Get Variable3"
	GetVariable v:Index
	Calculate Operation="+" Operand=1 -> mv:Calculate2
	GetVariable mv:"Get Variable3"
	GetItemfromList Get="Items in Range" GetItemsFromIndex=mv:Calculate2 ToIndex=v:Length
	AddtoVariable ResList
	ExitShortcut
Otherwise
End
If Input=Equals Value=AddItemAtIndex
	GetVariable v:Input.index
	SetVariable Index
	GetVariable v:Input.item
	SetVariable ItemToAdd
	GetVariable v:Input.list
	SetVariable List
	Count Items
	SetVariable Length
	GetVariable v:Length
	If Input=Equals Value=0
		GetVariable v:ItemToAdd
		ExitShortcut
	Otherwise
	End
	GetVariable v:Index
	If Input=Equals Value=1
		GetVariable v:ItemToAdd
		SetVariable ResList
		GetVariable v:List
		AddtoVariable ResList
		ExitShortcut
	Otherwise
	End
	GetVariable v:Index -> mv:"Get Variable4"
	GetVariable v:Length
	Calculate Operation="+" Operand=1 -> mv:Calculate3
	GetVariable mv:"Get Variable4"
	If Input=Equals Value=mv:Calculate3
		GetVariable v:List
		SetVariable ResList
		GetVariable v:ItemToAdd
		AddtoVariable ResList
		ExitShortcut
	Otherwise
	End
	GetVariable v:List -> mv:"Get Variable5"
	GetVariable v:Index
	Calculate Operation="-" Operand=1 -> mv:Calculate4
	GetVariable mv:"Get Variable5"
	GetItemfromList Get="Items in Range" GetItemsFromIndex=1 ToIndex=mv:Calculate4
	SetVariable ResList
	GetVariable v:ItemToAdd
	AddtoVariable ResList
	GetVariable v:List
	GetItemfromList Get="Items in Range" GetItemsFromIndex=v:Index ToIndex=v:Length
	AddtoVariable ResList
	ExitShortcut
Otherwise
End
If Input=Equals Value=QuickAdd
	ShowResult "QuickAdd lets you quickly add a list of items with titles, note values, and descriptions all at once.\n\nItems should be added as 'Item Title/Note Value/Description'"
	ChoosefromMenu Prompt="Use QuickAdd?" Items=["Start QuickAdd", "Don't"]
	Case
	Case
		Nothing
		ExitShortcut
	End
	List ["Title/Note/Description\(s:askWhenRun)"]
	RepeatwithEach
		If Input=Equals Value="Title/Note/Description"
			Nothing
		Otherwise
			SplitText Separator=Custom Custom="/"
			SetVariable TitleNoteDescription
			List ["", "", ""]
			AddtoVariable TitleNoteDescription
			GetVariable v:TitleNoteDescription
			GetItemfromList Get="Item At Index" Index=1 -> mv:Title
			GetVariable v:TitleNoteDescription
			GetItemfromList Get="Item At Index" Index=2 -> mv:Note
			GetVariable v:TitleNoteDescription
			GetItemfromList Get="Item At Index" Index=3 -> mv:Description
			Dictionary {name: mv:Title, note: mv:Note, description: mv:Description, photo: " "}
		End
	End
	ExitShortcut
Otherwise
End
If Input=Equals Value=FindUnusedFilename
	AskforInput Question="Pick a name for this list" -> mv:Filename
	GetFile Service="iCloud Drive" ShowDocumentPicker=false FilePath="/IconListV2/MyLists/\(mv:Filename).iconlist2" ErrorIfNotFound=false
	Count Items
	If Input=Equals Value=0
		GetVariable mv:Filename
		ExitShortcut
	Otherwise
		ShowResult "The filename \(mv:Filename) is already taken"
	End
	Dictionary {action: FindUnusedFilename} -> mv:Dictionary11
	GetVariable mv:Dictionary11
	RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
	ExitShortcut
Otherwise
End
If Input=Equals Value=EditList
	GetVariable v:Input.items
	SetVariable Items
	GetVariable v:Input.filename
	SetVariable Filename
	GetVariable v:Filename
	Count Characters
	If Input=Equals Value=0
		Text "BEGIN:VCARD\nVERSION:3.0\nNOTE;CHARSET=utf-8:saveList\nN;CHARSET=utf-8:! Save List;;;\nORG;CHARSET=utf-8:This list is not saved and may be lost.\nEND:VCARD"
		SetVariable SaveItem
		Text "⚠️ This list is not saved."
		SetVariable StatusText
	Otherwise
		Dictionary {list: []}
		SetDictionaryValue Key=list Value=v:Items
		SetName Name="\(v:Filename).iconlist2" Advanced=true DontIncludeFileExtension=true
		SaveFile Service="iCloud Drive" AskWheretoSave=false DestinationPath="/IconListV2/MyLists/\(v:Filename).iconlist2" OverwriteIfFileExists=true
		Text "✅ This list is saved to `IconListV2/MyLists/\(v:Filename)`"
		SetVariable StatusText
		Text "BEGIN:VCARD\nVERSION:3.0\nNOTE;CHARSET=utf-8:saveList\nN;CHARSET=utf-8:Save As;;;\nEND:VCARD"
		SetVariable SaveItem
	End
	GetVariable v:Items
	RepeatwithEach
		If Input=Equals Value=_blank_
			Nothing
		Otherwise
			GetVariable v:"Repeat Item"
			SetDictionaryValue Key=note Value=v:"Repeat Index" -> mv:CardData
			Dictionary {action: CreateCard, carddata: mv:CardData} -> mv:Dictionary12
			GetVariable mv:Dictionary12
			RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
		End
	End
	CombineText Separator="New Lines" -> mv:CurrentListvCard
	Text "\(mv:CurrentListvCard)\nBEGIN:VCARD\nVERSION:3.0\nN;CHARSET=utf-8:—————;;;\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nNOTE;CHARSET=utf-8:addItem\nN;CHARSET=utf-8:+ Add Item;;;\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nNOTE;CHARSET=utf-8:quickAdd\nN;CHARSET=utf-8:QuickAdd;;;\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nN;CHARSET=utf-8:—————;;;\nEND:VCARD\n\(v:SaveItem)\nBEGIN:VCARD\nVERSION:3.0\nNOTE;CHARSET=utf-8:copyToClipboard\nN;CHARSET=utf-8:Export List;;;\nEND:VCARD" -> mv:vCard2
	Dictionary {action: AsContact, vcard: mv:vCard2} -> mv:Dictionary13
	GetVariable mv:Dictionary13
	RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
	ChoosefromList Prompt=v:StatusText -> mv:ChosenItem2
	GetVariable mv:ChosenItem2{as: contact, get: notes} -> mv:ChosenData
	If Input=Equals Value=addItem
		Dictionary {action: EditItem, carddata: {name: "", description: "", note: "", photo: " "}} -> mv:Dictionary14
		GetVariable mv:Dictionary14
		RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
		AddtoVariable Items
		Text ""
	Otherwise
	End
	If Input=Equals Value=quickAdd
		Dictionary {action: QuickAdd} -> mv:Dictionary15
		GetVariable mv:Dictionary15
		RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
		AddtoVariable Items
		Text ""
	Otherwise
	End
	If Input=Equals Value=saveList
		Dictionary {action: FindUnusedFilename} -> mv:Dictionary16
		GetVariable mv:Dictionary16
		RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
		SetVariable Filename
		Text ""
	Otherwise
	End
	If Input=Equals Value=copyToClipboard
		ChoosefromMenu Prompt="Copy list to clipboard?" Items=["Copy to clipboard", Nevermind]
		Case
			GetVariable mv:CurrentListvCard
			CopytoClipboard
			ChoosefromMenu Prompt="The list has been copied.\n\(v:StatusText)" Items=["Continue Editing"]
			Case
			End
		Case
		End
		Text ""
	Otherwise
	End
	Count Characters
	If Input=Equals Value=0
		Nothing
	Otherwise
		Number mv:ChosenData -> mv:Index
		GetVariable v:Items
		GetItemfromList Get="Item At Index" Index=mv:Index -> mv:ItemToEdit
		Dictionary {action: EditItem, carddata: mv:ItemToEdit} -> mv:Dictionary17
		GetVariable mv:Dictionary17
		RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
		SetVariable NewItem
		Dictionary {action: RemoveItemAtIndex, list: [], index: mv:Index}
		SetDictionaryValue Key=list Value=v:Items
		RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
		SetVariable Items
		Dictionary {action: AddItemAtIndex, list: [], item: v:NewItem, index: mv:Index}
		SetDictionaryValue Key=list Value=v:Items
		RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
		SetVariable Items
		Nothing
	End
	Dictionary {action: EditList, items: [], filename: v:Filename}
	SetDictionaryValue Key=items Value=v:Items
	RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
	ExitShortcut
Otherwise
End
If Input=Equals Value=MainMenu
	GetFile Service="iCloud Drive" ShowDocumentPicker=false FilePath="IconListV2/MyLists/" ErrorIfNotFound=false
	RepeatwithEach
		GetVariable v:"Repeat Item"{as: file} -> mv:CurrentItem
		Dictionary {action: Escape, text: mv:CurrentItem{as: file, get: name}} -> mv:Dictionary18
		GetVariable mv:Dictionary18
		RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
		SetVariable Name
		GetVariable mv:CurrentItem
		SetName Name="a.json"
		GetDictionaryValue Get=Value Key=list
		Count Items
		Calculate Operation="-" Operand=1 -> mv:Count
		If Input=Equals Value=1
			Text item
		Otherwise
			Text items
		End -> mv:IfResult
		Text "BEGIN:VCARD\nVERSION:3.0\nN;CHARSET=utf-8:\(v:Name);;;\nORG;CHARSET=utf-8:\(mv:Count) \(mv:IfResult)\nNOTE;CHARSET=utf-8:editList\nEND:VCARD"
	End
	CombineText Separator="New Lines" -> mv:CombinedText
	Text "\(mv:CombinedText)\nBEGIN:VCARD\nVERSION:3.0\nN;CHARSET=utf-8:—————;;;\nEND:VCARD\nBEGIN:VCARD\nVERSION:3.0\nNOTE;CHARSET=utf-8:newList\nN;CHARSET=utf-8:+ New List;;;\nEND:VCARD" -> mv:vCard3
	Dictionary {action: AsContact, vcard: mv:vCard3} -> mv:Dictionary19
	GetVariable mv:Dictionary19
	RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
	ChoosefromList -> mv:ChosenItem3
	GetVariable mv:ChosenItem3{as: contact, get: notes}
	If Input=Equals Value=newList
		Dictionary {action: EditList, filename: "", items: [_blank_]}
		RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
		Nothing
	Otherwise
	End
	If Input=Equals Value=oldList
	Otherwise
	End
	If Input=Equals Value=editList
		GetVariable mv:ChosenItem3
		GetName -> mv:Name1
		GetFile Service="iCloud Drive" ShowDocumentPicker=false FilePath="/IconListV2/MyLists/\(mv:Name1).iconlist2" ErrorIfNotFound=true
		SetName Name="a.json"
		GetDictionaryValue Get=Value Key=list -> mv:Items
		Dictionary {action: EditList, items: [], filename: mv:Name1}
		SetDictionaryValue Key=items Value=mv:Items
		RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
		Nothing
	Otherwise
	End
	Dictionary {action: MainMenu} -> mv:Dictionary20
	GetVariable mv:Dictionary20
	RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
	ExitShortcut
Otherwise
End
Dictionary {action: MainMenu} -> mv:Dictionary21
GetVariable mv:Dictionary21
RunShortcut Shortcut=v:ThisShortcut ShowWhileRunning=false
ExitShortcut